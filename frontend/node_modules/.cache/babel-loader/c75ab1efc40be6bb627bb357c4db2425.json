{"ast":null,"code":"import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react'; // Define a service using a base URL and expected endpoints\n\nexport const userAuthApi = createApi({\n  reducerPath: 'userAuthApi',\n  baseQuery: fetchBaseQuery({\n    baseUrl: 'http://127.0.0.1:8000/api/user/'\n  }),\n  endpoints: builder => ({\n    registerUser: builder.mutation({\n      query: user => {\n        return {\n          url: 'register/',\n          method: 'POST',\n          body: user,\n          headers: {\n            'Content-type': 'application/json'\n          }\n        };\n      }\n    }),\n    loginUser: builder.mutation({\n      query: user => {\n        return {\n          url: 'login/',\n          method: 'POST',\n          body: user,\n          headers: {\n            'Content-type': 'application/json'\n          }\n        };\n      }\n    }),\n    getLoggedUser: builder.query({\n      query: access_token => {\n        return {\n          url: 'profile/',\n          method: 'GET',\n          headers: {\n            'authorization': `Bearer ${access_token}`\n          }\n        };\n      }\n    }),\n    changeUserPassword: builder.mutation({\n      query: _ref => {\n        let {\n          actualData,\n          access_token\n        } = _ref;\n        return {\n          url: 'changepassword/',\n          method: 'POST',\n          body: actualData,\n          headers: {\n            'authorization': `Bearer ${access_token}`\n          }\n        };\n      }\n    }),\n    sendPasswordResetEmail: builder.mutation({\n      query: user => {\n        return {\n          url: 'send-reset-password-email/',\n          method: 'POST',\n          body: user,\n          headers: {\n            'Content-type': 'application/json'\n          }\n        };\n      }\n    }),\n    resetPassword: builder.mutation({\n      query: _ref2 => {\n        let {\n          actualData,\n          id,\n          token\n        } = _ref2;\n        return {\n          url: `/reset-password/${id}/${token}/`,\n          method: 'POST',\n          body: actualData,\n          headers: {\n            'Content-type': 'application/json'\n          }\n        };\n      }\n    })\n  })\n});\nexport const {\n  useRegisterUserMutation,\n  useLoginUserMutation,\n  useGetLoggedUserQuery,\n  useChangeUserPasswordMutation,\n  useSendPasswordResetEmailMutation,\n  useResetPasswordMutation\n} = userAuthApi;","map":{"version":3,"sources":["C:/Users/shash/OneDrive/Desktop/Original_DeepInsights/frontend/src/services/userAuthApi.js"],"names":["createApi","fetchBaseQuery","userAuthApi","reducerPath","baseQuery","baseUrl","endpoints","builder","registerUser","mutation","query","user","url","method","body","headers","loginUser","getLoggedUser","access_token","changeUserPassword","actualData","sendPasswordResetEmail","resetPassword","id","token","useRegisterUserMutation","useLoginUserMutation","useGetLoggedUserQuery","useChangeUserPasswordMutation","useSendPasswordResetEmailMutation","useResetPasswordMutation"],"mappings":"AAAA,SAASA,SAAT,EAAoBC,cAApB,QAA0C,8BAA1C,C,CAEA;;AACA,OAAO,MAAMC,WAAW,GAAGF,SAAS,CAAC;AACnCG,EAAAA,WAAW,EAAE,aADsB;AAEnCC,EAAAA,SAAS,EAAEH,cAAc,CAAC;AAAEI,IAAAA,OAAO,EAAE;AAAX,GAAD,CAFU;AAGnCC,EAAAA,SAAS,EAAGC,OAAD,KAAc;AACvBC,IAAAA,YAAY,EAAED,OAAO,CAACE,QAAR,CAAiB;AAC7BC,MAAAA,KAAK,EAAGC,IAAD,IAAU;AACf,eAAO;AACLC,UAAAA,GAAG,EAAE,WADA;AAELC,UAAAA,MAAM,EAAE,MAFH;AAGLC,UAAAA,IAAI,EAAEH,IAHD;AAILI,UAAAA,OAAO,EAAE;AACP,4BAAgB;AADT;AAJJ,SAAP;AAQD;AAV4B,KAAjB,CADS;AAavBC,IAAAA,SAAS,EAAET,OAAO,CAACE,QAAR,CAAiB;AAC1BC,MAAAA,KAAK,EAAGC,IAAD,IAAU;AACf,eAAO;AACLC,UAAAA,GAAG,EAAE,QADA;AAELC,UAAAA,MAAM,EAAE,MAFH;AAGLC,UAAAA,IAAI,EAAEH,IAHD;AAILI,UAAAA,OAAO,EAAE;AACP,4BAAgB;AADT;AAJJ,SAAP;AAQD;AAVyB,KAAjB,CAbY;AAyBvBE,IAAAA,aAAa,EAAEV,OAAO,CAACG,KAAR,CAAc;AAC3BA,MAAAA,KAAK,EAAGQ,YAAD,IAAkB;AACvB,eAAO;AACLN,UAAAA,GAAG,EAAE,UADA;AAELC,UAAAA,MAAM,EAAE,KAFH;AAGLE,UAAAA,OAAO,EAAE;AACP,6BAAkB,UAASG,YAAa;AADjC;AAHJ,SAAP;AAOD;AAT0B,KAAd,CAzBQ;AAoCvBC,IAAAA,kBAAkB,EAAEZ,OAAO,CAACE,QAAR,CAAiB;AACnCC,MAAAA,KAAK,EAAE,QAAkC;AAAA,YAAjC;AAAEU,UAAAA,UAAF;AAAcF,UAAAA;AAAd,SAAiC;AACvC,eAAO;AACLN,UAAAA,GAAG,EAAE,iBADA;AAELC,UAAAA,MAAM,EAAE,MAFH;AAGLC,UAAAA,IAAI,EAAEM,UAHD;AAILL,UAAAA,OAAO,EAAE;AACP,6BAAkB,UAASG,YAAa;AADjC;AAJJ,SAAP;AAQD;AAVkC,KAAjB,CApCG;AAgDvBG,IAAAA,sBAAsB,EAAEd,OAAO,CAACE,QAAR,CAAiB;AACvCC,MAAAA,KAAK,EAAGC,IAAD,IAAU;AACf,eAAO;AACLC,UAAAA,GAAG,EAAE,4BADA;AAELC,UAAAA,MAAM,EAAE,MAFH;AAGLC,UAAAA,IAAI,EAAEH,IAHD;AAILI,UAAAA,OAAO,EAAE;AACP,4BAAgB;AADT;AAJJ,SAAP;AAQD;AAVsC,KAAjB,CAhDD;AA4DvBO,IAAAA,aAAa,EAAEf,OAAO,CAACE,QAAR,CAAiB;AAC9BC,MAAAA,KAAK,EAAE,SAA+B;AAAA,YAA9B;AAAEU,UAAAA,UAAF;AAAcG,UAAAA,EAAd;AAAkBC,UAAAA;AAAlB,SAA8B;AACpC,eAAO;AACLZ,UAAAA,GAAG,EAAG,mBAAkBW,EAAG,IAAGC,KAAM,GAD/B;AAELX,UAAAA,MAAM,EAAE,MAFH;AAGLC,UAAAA,IAAI,EAAEM,UAHD;AAILL,UAAAA,OAAO,EAAE;AACP,4BAAgB;AADT;AAJJ,SAAP;AAQD;AAV6B,KAAjB;AA5DQ,GAAd;AAHwB,CAAD,CAA7B;AA8EP,OAAO,MAAM;AAAEU,EAAAA,uBAAF;AAA2BC,EAAAA,oBAA3B;AAAiDC,EAAAA,qBAAjD;AAAwEC,EAAAA,6BAAxE;AAAuGC,EAAAA,iCAAvG;AAA0IC,EAAAA;AAA1I,IAAuK5B,WAA7K","sourcesContent":["import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react'\r\n\r\n// Define a service using a base URL and expected endpoints\r\nexport const userAuthApi = createApi({\r\n  reducerPath: 'userAuthApi',\r\n  baseQuery: fetchBaseQuery({ baseUrl: 'http://127.0.0.1:8000/api/user/' }),\r\n  endpoints: (builder) => ({\r\n    registerUser: builder.mutation({\r\n      query: (user) => {\r\n        return {\r\n          url: 'register/',\r\n          method: 'POST',\r\n          body: user,\r\n          headers: {\r\n            'Content-type': 'application/json',\r\n          }\r\n        }\r\n      }\r\n    }),\r\n    loginUser: builder.mutation({\r\n      query: (user) => {\r\n        return {\r\n          url: 'login/',\r\n          method: 'POST',\r\n          body: user,\r\n          headers: {\r\n            'Content-type': 'application/json',\r\n          }\r\n        }\r\n      }\r\n    }),\r\n    getLoggedUser: builder.query({\r\n      query: (access_token) => {\r\n        return {\r\n          url: 'profile/',\r\n          method: 'GET',\r\n          headers: {\r\n            'authorization': `Bearer ${access_token}`,\r\n          }\r\n        }\r\n      }\r\n    }),\r\n    changeUserPassword: builder.mutation({\r\n      query: ({ actualData, access_token }) => {\r\n        return {\r\n          url: 'changepassword/',\r\n          method: 'POST',\r\n          body: actualData,\r\n          headers: {\r\n            'authorization': `Bearer ${access_token}`,\r\n          }\r\n        }\r\n      }\r\n    }),\r\n    sendPasswordResetEmail: builder.mutation({\r\n      query: (user) => {\r\n        return {\r\n          url: 'send-reset-password-email/',\r\n          method: 'POST',\r\n          body: user,\r\n          headers: {\r\n            'Content-type': 'application/json',\r\n          }\r\n        }\r\n      }\r\n    }),\r\n    resetPassword: builder.mutation({\r\n      query: ({ actualData, id, token }) => {\r\n        return {\r\n          url: `/reset-password/${id}/${token}/`,\r\n          method: 'POST',\r\n          body: actualData,\r\n          headers: {\r\n            'Content-type': 'application/json',\r\n          }\r\n        }\r\n      }\r\n    }),\r\n  }),\r\n})\r\n\r\nexport const { useRegisterUserMutation, useLoginUserMutation, useGetLoggedUserQuery, useChangeUserPasswordMutation, useSendPasswordResetEmailMutation, useResetPasswordMutation } = userAuthApi"]},"metadata":{},"sourceType":"module"}