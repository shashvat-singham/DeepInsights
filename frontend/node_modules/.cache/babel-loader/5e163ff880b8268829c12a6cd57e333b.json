{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\shash\\\\OneDrive\\\\Desktop\\\\Django login\\\\frontend\\\\src\\\\pages\\\\auth\\\\SendPasswordResetEmail.js\",\n    _s = $RefreshSig$();\n\nimport { Grid, TextField, Button, Box, Alert, Typography } from \"@mui/material\";\nimport { useState } from 'react';\nimport { useSendPasswordResetEmailMutation } from \"../../services/userAuthApi\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst SendPasswordResetEmail = () => {\n  _s();\n\n  const [server_error, setServerError] = useState({});\n  const [server_msg, setServerMsg] = useState({});\n  const [sendPasswordResetEmail, {\n    isLoading\n  }] = useSendPasswordResetEmailMutation();\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const data = new FormData(e.currentTarget);\n    const actualData = {\n      email: data.get('email')\n    };\n    const res = await sendPasswordResetEmail(actualData);\n\n    if (res.error) {\n      console.log(typeof res.error.data.errors);\n      console.log(res.error.data.errors);\n      setServerMsg({});\n      setServerError(res.error.data.errors);\n    }\n\n    if (res.data) {\n      console.log(typeof res.data);\n      console.log(res.data);\n      setServerError({});\n      setServerMsg(res.data);\n      document.getElementById('password-reset-email-form').reset();\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      justifyContent: \"center\",\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        sm: 6,\n        xs: 12,\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Reset Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          component: \"form\",\n          noValidate: true,\n          sx: {\n            mt: 1\n          },\n          id: \"password-reset-email-form\",\n          onSubmit: handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(TextField, {\n            margin: \"normal\",\n            required: true,\n            fullWidth: true,\n            id: \"email\",\n            name: \"email\",\n            label: \"Email Address\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 11\n          }, this), server_error.email ? /*#__PURE__*/_jsxDEV(Typography, {\n            style: {\n              fontSize: 12,\n              color: 'red',\n              paddingLeft: 10\n            },\n            children: server_error.email[0]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 33\n          }, this) : \"\", /*#__PURE__*/_jsxDEV(Box, {\n            textAlign: \"center\",\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              type: \"submit\",\n              variant: \"contained\",\n              sx: {\n                mt: 3,\n                mb: 2,\n                px: 5\n              },\n              children: \"Send\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 37,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 11\n          }, this), server_error.non_field_errors ? /*#__PURE__*/_jsxDEV(Alert, {\n            severity: \"error\",\n            children: server_error.non_field_errors[0]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 44\n          }, this) : '', server_msg.msg ? /*#__PURE__*/_jsxDEV(Alert, {\n            severity: \"success\",\n            children: server_msg.msg\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 29\n          }, this) : '']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 5\n    }, this)\n  }, void 0, false);\n};\n\n_s(SendPasswordResetEmail, \"x0UksSscQ6g2gwVnc4SNW7gPufE=\", false, function () {\n  return [useSendPasswordResetEmailMutation];\n});\n\n_c = SendPasswordResetEmail;\nexport default SendPasswordResetEmail;\n\nvar _c;\n\n$RefreshReg$(_c, \"SendPasswordResetEmail\");","map":{"version":3,"sources":["C:/Users/shash/OneDrive/Desktop/Django login/frontend/src/pages/auth/SendPasswordResetEmail.js"],"names":["Grid","TextField","Button","Box","Alert","Typography","useState","useSendPasswordResetEmailMutation","SendPasswordResetEmail","server_error","setServerError","server_msg","setServerMsg","sendPasswordResetEmail","isLoading","handleSubmit","e","preventDefault","data","FormData","currentTarget","actualData","email","get","res","error","console","log","errors","document","getElementById","reset","mt","fontSize","color","paddingLeft","mb","px","non_field_errors","msg"],"mappings":"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","sourcesContent":["import { Grid, TextField, Button, Box, Alert, Typography } from \"@mui/material\";\r\nimport { useState } from 'react';\r\nimport { useSendPasswordResetEmailMutation } from \"../../services/userAuthApi\";\r\nconst SendPasswordResetEmail = () => {\r\n  const [server_error, setServerError] = useState({})\r\n  const [server_msg, setServerMsg] = useState({})\r\n  const [sendPasswordResetEmail, { isLoading }] = useSendPasswordResetEmailMutation()\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    const data = new FormData(e.currentTarget);\r\n    const actualData = {\r\n      email: data.get('email'),\r\n    }\r\n    const res = await sendPasswordResetEmail(actualData)\r\n    if (res.error) {\r\n      console.log(typeof (res.error.data.errors))\r\n      console.log(res.error.data.errors)\r\n      setServerMsg({})\r\n      setServerError(res.error.data.errors)\r\n    }\r\n    if (res.data) {\r\n      console.log(typeof (res.data))\r\n      console.log(res.data)\r\n      setServerError({})\r\n      setServerMsg(res.data)\r\n      document.getElementById('password-reset-email-form').reset()\r\n    }\r\n  }\r\n  return <>\r\n    <Grid container justifyContent='center'>\r\n      <Grid item sm={6} xs={12}>\r\n        <h1>Reset Password</h1>\r\n        <Box component='form' noValidate sx={{ mt: 1 }} id='password-reset-email-form' onSubmit={handleSubmit}>\r\n          <TextField margin='normal' required fullWidth id='email' name='email' label='Email Address' />\r\n          {server_error.email ? <Typography style={{ fontSize: 12, color: 'red', paddingLeft: 10 }}>{server_error.email[0]}</Typography> : \"\"}\r\n          <Box textAlign='center'>\r\n            <Button type='submit' variant='contained' sx={{ mt: 3, mb: 2, px: 5 }}>Send</Button>\r\n          </Box>\r\n          {server_error.non_field_errors ? <Alert severity='error'>{server_error.non_field_errors[0]}</Alert> : ''}\r\n          {server_msg.msg ? <Alert severity='success'>{server_msg.msg}</Alert> : ''}\r\n        </Box>\r\n      </Grid>\r\n    </Grid>\r\n  </>;\r\n};\r\n\r\nexport default SendPasswordResetEmail;\r\n"]},"metadata":{},"sourceType":"module"}