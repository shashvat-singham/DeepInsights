{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\shash\\\\OneDrive\\\\Desktop\\\\DeepInsights\\\\frontend\\\\src\\\\pages\\\\auth\\\\ResetPassword.js\",\n    _s = $RefreshSig$();\n\nimport { Grid, TextField, Button, Box, Alert, Typography } from \"@mui/material\";\nimport { useState } from 'react';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport { useResetPasswordMutation } from \"../../services/userAuthApi\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst ResetPassword = () => {\n  _s();\n\n  const [server_error, setServerError] = useState({});\n  const [server_msg, setServerMsg] = useState({});\n  const [resetPassword] = useResetPasswordMutation();\n  const {\n    id,\n    token\n  } = useParams();\n  const navigate = useNavigate();\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const data = new FormData(e.currentTarget);\n    const actualData = {\n      password: data.get('password'),\n      password2: data.get('password2')\n    };\n    const res = await resetPassword({\n      actualData,\n      id,\n      token\n    });\n\n    if (res.error) {\n      setServerMsg({});\n      setServerError(res.error.data.errors);\n    }\n\n    if (res.data) {\n      setServerError({});\n      setServerMsg(res.data);\n      document.getElementById('password-reset-form').reset();\n      setTimeout(() => {\n        navigate(\"/login\");\n      }, 3000);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      component: \"form\",\n      noValidate: true,\n      sx: {\n        mt: 1\n      },\n      id: \"password-reset-form\",\n      onSubmit: handleSubmit,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: [/*#__PURE__*/_jsxDEV(\"nav\", {\n          children: /*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"logo\",\n            children: \"DeepInsights\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"main-div\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"sub-div\",\n            style: {\n              width: \"auto\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n              className: \"head\",\n              children: \"Password reset\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"cont\",\n              children: \"Please enter your new password twice so we can verify you typed it correctly.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              for: \"new-pass\",\n              children: \"New password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(TextField, {\n              margin: \"normal\",\n              sx: {\n                color: 'white',\n                border: \"solid white 2px\",\n                borderRadius: 1\n              },\n              required: true,\n              fullWidth: true,\n              id: \"password\",\n              name: \"password\",\n              label: \"New Password\",\n              type: \"password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 13\n            }, this), server_error.password ? /*#__PURE__*/_jsxDEV(Typography, {\n              style: {\n                fontSize: 12,\n                color: 'red',\n                paddingLeft: 10\n              },\n              children: server_error.password[0]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 36\n            }, this) : \"\", /*#__PURE__*/_jsxDEV(\"ul\", {\n              style: {\n                marginTop: \"10px\"\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"li\", {\n                children: \"Must contain at least 8 characters (12+ recommended)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 79,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                children: \"Must contain at least one uppercase letter and one lowercase letter\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 80,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                children: \"Must contain at least one number\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 84,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                children: \"Must contain at least one special character\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 85,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                children: \"Must not contain your first name, last name, or commonly used passwords\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 86,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              for: \"new-pass-conf\",\n              children: \"New password confirmation\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(TextField, {\n              margin: \"normal\",\n              sx: {\n                color: 'white',\n                border: \"solid white 2px\",\n                borderRadius: 1\n              },\n              sx: {\n                input: {\n                  color: 'white'\n                }\n              },\n              required: true,\n              fullWidth: true,\n              id: \"password2\",\n              name: \"password2\",\n              label: \"Confirm New Password\",\n              type: \"password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 13\n            }, this), server_error.password2 ? /*#__PURE__*/_jsxDEV(Typography, {\n              style: {\n                fontSize: 12,\n                color: 'yellow',\n                paddingLeft: 10\n              },\n              children: server_error.password2[0]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 37\n            }, this) : \"\", /*#__PURE__*/_jsxDEV(\"a\", {\n              href: \"/reset-success\",\n              className: \"links sign-up\",\n              children: \"Change password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"cont\",\n              children: [\"By using \", /*#__PURE__*/_jsxDEV(\"b\", {\n                children: \"DeepInsights\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 106,\n                columnNumber: 24\n              }, this), \" you agree to the\", \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n                style: {\n                  color: \"#B44538\"\n                },\n                children: \"Terms of Services\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 107,\n                columnNumber: 15\n              }, this), \" and\", \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n                style: {\n                  color: \"#B44538\"\n                },\n                children: \"Privacy Policy\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 108,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 5\n    }, this)\n  }, void 0, false);\n};\n\n_s(ResetPassword, \"52scf+ggCOc2EkrYaz1wVLZU9P0=\", false, function () {\n  return [useResetPasswordMutation, useParams, useNavigate];\n});\n\n_c = ResetPassword;\nexport default ResetPassword;\n\nvar _c;\n\n$RefreshReg$(_c, \"ResetPassword\");","map":{"version":3,"sources":["C:/Users/shash/OneDrive/Desktop/DeepInsights/frontend/src/pages/auth/ResetPassword.js"],"names":["Grid","TextField","Button","Box","Alert","Typography","useState","useNavigate","useParams","useResetPasswordMutation","ResetPassword","server_error","setServerError","server_msg","setServerMsg","resetPassword","id","token","navigate","handleSubmit","e","preventDefault","data","FormData","currentTarget","actualData","password","get","password2","res","error","errors","document","getElementById","reset","setTimeout","mt","width","color","border","borderRadius","fontSize","paddingLeft","marginTop","input"],"mappings":"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","sourcesContent":["import { Grid, TextField, Button, Box, Alert, Typography } from \"@mui/material\";\r\nimport { useState } from 'react';\r\nimport { useNavigate, useParams } from 'react-router-dom';\r\nimport { useResetPasswordMutation } from \"../../services/userAuthApi\";\r\n\r\nconst ResetPassword = () => {\r\n  const [server_error, setServerError] = useState({})\r\n  const [server_msg, setServerMsg] = useState({})\r\n  const [resetPassword] = useResetPasswordMutation()\r\n  const { id, token } = useParams()\r\n  const navigate = useNavigate()\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    const data = new FormData(e.currentTarget);\r\n    const actualData = {\r\n      password: data.get('password'),\r\n      password2: data.get('password2'),\r\n    }\r\n    const res = await resetPassword({ actualData, id, token })\r\n    if (res.error) {\r\n      setServerMsg({})\r\n      setServerError(res.error.data.errors)\r\n    }\r\n    if (res.data) {\r\n      setServerError({})\r\n      setServerMsg(res.data)\r\n      document.getElementById('password-reset-form').reset()\r\n      setTimeout(() => {\r\n        navigate(\"/login\")\r\n      }, 3000)\r\n    }\r\n\r\n  }\r\n  return <>\r\n    {/* <Grid container justifyContent='center'>\r\n      <Grid item sm={6} xs={12}>\r\n        <h1>Reset Password</h1>\r\n        <Box component='form' noValidate sx={{ mt: 1 }} id='password-reset-form' onSubmit={handleSubmit}>\r\n          <TextField margin='normal' required fullWidth id='password' name='password' label='New Password' type='password' />\r\n          {server_error.password ? <Typography style={{ fontSize: 12, color: 'red', paddingLeft: 10 }}>{server_error.password[0]}</Typography> : \"\"}\r\n          <TextField margin='normal' required fullWidth id='password2' name='password2' label='Confirm New Password' type='password' />\r\n          {server_error.password2 ? <Typography style={{ fontSize: 12, color: 'yellow', paddingLeft: 10 }}>{server_error.password2[0]}</Typography> : \"\"}\r\n          <Box textAlign='center'>\r\n            <Button type='submit' variant='contained' sx={{ mt: 3, mb: 2, px: 5 }}>Save</Button>\r\n          </Box>\r\n          {server_error.non_field_errors ? <Alert severity='error'>{server_error.non_field_errors[0]}</Alert> : ''}\r\n          {server_msg.msg ? <Alert severity='success'>{server_msg.msg}</Alert> : ''}\r\n        </Box>\r\n      </Grid>\r\n    </Grid> */}\r\n    < Box component='form' noValidate sx={{ mt: 1 }} id='password-reset-form' onSubmit={handleSubmit}>\r\n    <div className=\"container\">\r\n        {/* logo */}\r\n        <nav>\r\n          <h1 className=\"logo\">DeepInsights</h1>\r\n        </nav>\r\n        {/* create account */}\r\n        <div className=\"main-div\">\r\n          <div className=\"sub-div\" style={{ width: \"auto\" }}>\r\n            <h1 className=\"head\">Password reset</h1>\r\n            <p className=\"cont\">\r\n              Please enter your new password twice so we can verify you typed it\r\n              correctly.\r\n            </p>\r\n\r\n            {/* email and password input tag */}\r\n\r\n            <label for=\"new-pass\">New password</label>\r\n            {/* <input\r\n              type=\"password\"\r\n              id=\"new-pass\"\r\n              placeholder=\"New password\"\r\n              style={{ width: \"auto\" }}\r\n            ></input> */}\r\n            <TextField margin='normal'sx={{ color: 'white', border: \"solid white 2px\", borderRadius: 1}} required fullWidth id='password' name='password' label='New Password' type='password' />\r\n          {server_error.password ? <Typography style={{ fontSize: 12, color: 'red', paddingLeft: 10 }}>{server_error.password[0]}</Typography> : \"\"}\r\n\r\n            <ul style={{ marginTop: \"10px\" }}>\r\n              <li>Must contain at least 8 characters (12+ recommended)</li>\r\n              <li>\r\n                Must contain at least one uppercase letter and one lowercase\r\n                letter\r\n              </li>\r\n              <li>Must contain at least one number</li>\r\n              <li>Must contain at least one special character</li>\r\n              <li>\r\n                Must not contain your first name, last name, or commonly used\r\n                passwords\r\n              </li>\r\n            </ul>\r\n            <label for=\"new-pass-conf\">New password confirmation</label>\r\n            {/* <input\r\n              type=\"password\"\r\n              id=\"new-pass-conf\"\r\n              placeholder=\"New password confirmation\"\r\n              style={{ width: \"auto\" }}\r\n            ></input> */}\r\n            <TextField margin='normal'sx={{ color: 'white', border: \"solid white 2px\", borderRadius: 1}}sx={{ input: { color: 'white' } }} required fullWidth id='password2' name='password2' label='Confirm New Password' type='password' />\r\n          {server_error.password2 ? <Typography style={{ fontSize: 12, color: 'yellow', paddingLeft: 10 }}>{server_error.password2[0]}</Typography> : \"\"}\r\n\r\n\r\n            <a href=\"/reset-success\" className=\"links sign-up\">\r\n              Change password\r\n            </a>\r\n            <p className=\"cont\">\r\n              By using <b>DeepInsights</b> you agree to the{\" \"}\r\n              <span style={{ color: \"#B44538\" }}>Terms of Services</span> and{\" \"}\r\n              <span style={{ color: \"#B44538\" }}>Privacy Policy</span>\r\n            </p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </Box>\r\n  </>;\r\n};\r\n\r\nexport default ResetPassword;\r\n"]},"metadata":{},"sourceType":"module"}