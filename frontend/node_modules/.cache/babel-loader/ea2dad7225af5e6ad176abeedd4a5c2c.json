{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\shash\\\\OneDrive\\\\Desktop\\\\Django login\\\\frontend\\\\src\\\\pages\\\\Dashboard.js\",\n    _s = $RefreshSig$();\n\nimport { Button, CssBaseline, Grid, Typography } from '@mui/material';\nimport { useDispatch } from 'react-redux';\nimport { useNavigate } from 'react-router-dom';\nimport { unSetUserToken } from '../features/authSlice';\nimport { getToken, removeToken } from '../services/LocalStorageService';\nimport ChangePassword from './auth/ChangePassword';\nimport { useGetLoggedUserQuery } from '../services/userAuthApi';\nimport { useEffect, useState } from 'react';\nimport { setUserInfo, unsetUserInfo } from '../features/userSlice';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Dashboard = () => {\n  _s();\n\n  const handleLogout = () => {\n    dispatch(unsetUserInfo({\n      name: \"\",\n      email: \"\"\n    }));\n    dispatch(unSetUserToken({\n      access_token: null\n    }));\n    removeToken();\n    navigate('/login');\n  };\n\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n  const {\n    access_token\n  } = getToken();\n  const {\n    data,\n    isSuccess\n  } = useGetLoggedUserQuery(access_token);\n  const [userData, setUserData] = useState({\n    email: \"\",\n    name: \"\"\n  }); // Store User Data in Local State\n\n  useEffect(() => {\n    if (data && isSuccess) {\n      setUserData({\n        email: data.email,\n        name: data.name\n      });\n    }\n  }, [data, isSuccess]); // Store User Data in Redux Store\n\n  useEffect(() => {\n    if (data && isSuccess) {\n      dispatch(setUserInfo({\n        email: data.email,\n        name: data.name\n      }));\n    }\n  }, [data, isSuccess, dispatch]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(CssBaseline, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        sm: 4,\n        sx: {\n          backgroundColor: 'gray',\n          p: 5,\n          color: 'white'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Dashboard\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h5\",\n          children: [\"Email: \", userData.email]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          children: [\"Name: \", userData.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          color: \"warning\",\n          size: \"large\",\n          onClick: handleLogout,\n          sx: {\n            mt: 8\n          },\n          children: \"Logout\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        sm: 8,\n        children: /*#__PURE__*/_jsxDEV(ChangePassword, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Dashboard, \"P9N9B3MwjsmN0GEbtshacOejPfM=\", false, function () {\n  return [useNavigate, useDispatch, useGetLoggedUserQuery];\n});\n\n_c = Dashboard;\nexport default Dashboard;\n\nvar _c;\n\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"sources":["C:/Users/shash/OneDrive/Desktop/Django login/frontend/src/pages/Dashboard.js"],"names":["Button","CssBaseline","Grid","Typography","useDispatch","useNavigate","unSetUserToken","getToken","removeToken","ChangePassword","useGetLoggedUserQuery","useEffect","useState","setUserInfo","unsetUserInfo","Dashboard","handleLogout","dispatch","name","email","access_token","navigate","data","isSuccess","userData","setUserData","backgroundColor","p","color","mt"],"mappings":"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","sourcesContent":["import { Button, CssBaseline, Grid, Typography } from '@mui/material';\r\nimport { useDispatch } from 'react-redux';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { unSetUserToken } from '../features/authSlice';\r\nimport { getToken, removeToken } from '../services/LocalStorageService';\r\nimport ChangePassword from './auth/ChangePassword';\r\nimport { useGetLoggedUserQuery } from '../services/userAuthApi';\r\nimport { useEffect, useState } from 'react';\r\nimport { setUserInfo, unsetUserInfo } from '../features/userSlice';\r\nconst Dashboard = () => {\r\n  const handleLogout = () => {\r\n    dispatch(unsetUserInfo({ name: \"\", email: \"\" }))\r\n    dispatch(unSetUserToken({ access_token: null }))\r\n    removeToken()\r\n    navigate('/login')\r\n  }\r\n  const navigate = useNavigate()\r\n  const dispatch = useDispatch()\r\n  const { access_token } = getToken()\r\n  const { data, isSuccess } = useGetLoggedUserQuery(access_token)\r\n\r\n  const [userData, setUserData] = useState({\r\n    email: \"\",\r\n    name: \"\"\r\n  })\r\n\r\n  // Store User Data in Local State\r\n  useEffect(() => {\r\n    if (data && isSuccess) {\r\n      setUserData({\r\n        email: data.email,\r\n        name: data.name,\r\n      })\r\n    }\r\n  }, [data, isSuccess])\r\n\r\n  // Store User Data in Redux Store\r\n  useEffect(() => {\r\n    if (data && isSuccess) {\r\n      dispatch(setUserInfo({\r\n        email: data.email,\r\n        name: data.name\r\n      }))\r\n    }\r\n  }, [data, isSuccess, dispatch])\r\n\r\n  return <>\r\n    <CssBaseline />\r\n    <Grid container>\r\n      <Grid item sm={4} sx={{ backgroundColor: 'gray', p: 5, color: 'white' }}>\r\n        <h1>Dashboard</h1>\r\n        <Typography variant='h5'>Email: {userData.email}</Typography>\r\n        <Typography variant='h6'>Name: {userData.name}</Typography>\r\n        <Button variant='contained' color='warning' size='large' onClick={handleLogout} sx={{ mt: 8 }}>Logout</Button>\r\n      </Grid>\r\n      <Grid item sm={8}>\r\n        <ChangePassword />\r\n      </Grid>\r\n    </Grid>\r\n  </>;\r\n};\r\n\r\nexport default Dashboard;\r\n"]},"metadata":{},"sourceType":"module"}