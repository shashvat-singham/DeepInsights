{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\shash\\\\OneDrive\\\\Desktop\\\\DeepInsights\\\\frontend\\\\src\\\\pages\\\\auth\\\\SendPasswordResetEmail.js\",\n    _s = $RefreshSig$();\n\nimport { Grid, TextField, Button, Box, Alert, Typography } from \"@mui/material\";\nimport { useState } from 'react';\nimport { useSendPasswordResetEmailMutation } from \"../../services/userAuthApi\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst SendPasswordResetEmail = () => {\n  _s();\n\n  const [server_error, setServerError] = useState({});\n  const [server_msg, setServerMsg] = useState({});\n  const [sendPasswordResetEmail, {\n    isLoading\n  }] = useSendPasswordResetEmailMutation();\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const data = new FormData(e.currentTarget);\n    const actualData = {\n      email: data.get('email')\n    };\n    const res = await sendPasswordResetEmail(actualData);\n\n    if (res.error) {\n      console.log(typeof res.error.data.errors);\n      console.log(res.error.data.errors);\n      setServerMsg({});\n      setServerError(res.error.data.errors);\n    }\n\n    if (res.data) {\n      console.log(typeof res.data);\n      console.log(res.data);\n      setServerError({});\n      setServerMsg(res.data);\n      document.getElementById('password-reset-email-form').reset();\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      component: \"form\",\n      noValidate: true,\n      sx: {\n        mt: 1\n      },\n      id: \"password-reset-email-form\",\n      onSubmit: handleSubmit,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: [/*#__PURE__*/_jsxDEV(\"nav\", {\n          children: /*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"logo\",\n            children: \"DeepInsights\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 9\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"main-div\",\n          style: {\n            marginTop: \"10rem\"\n          },\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"sub-div\",\n            children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n              className: \"head\",\n              children: \"Forgot your password?\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              for: \"forgot\",\n              children: \"Enter your email and we\\u2019ll send you a link to reset your password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(TextField, {\n              margin: \"normal\",\n              sx: {\n                color: 'white',\n                border: \"solid white 2px\",\n                borderRadius: 1\n              },\n              required: true,\n              fullWidth: true,\n              id: \"email\",\n              name: \"email\",\n              label: \"name@company.com\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 11\n            }, this), server_error.email ? /*#__PURE__*/_jsxDEV(Typography, {\n              style: {\n                fontSize: 12,\n                color: 'red',\n                paddingLeft: 10\n              },\n              children: server_error.email[0]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 33\n            }, this) : \"\", /*#__PURE__*/_jsxDEV(Box, {\n              textAlign: \"center\",\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                type: \"submit\",\n                variant: \"contained\",\n                style: {\n                  backgroundColor: \"#B44538\"\n                },\n                sx: {\n                  mt: 3,\n                  mb: 2,\n                  px: 10\n                },\n                children: \"Send password reset link\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 70,\n                columnNumber: 10\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 11\n            }, this), server_error.non_field_errors ? /*#__PURE__*/_jsxDEV(Alert, {\n              severity: \"error\",\n              children: server_error.non_field_errors[0]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 44\n            }, this) : '']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 9\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 1\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 1\n    }, this)\n  }, void 0, false);\n};\n\n_s(SendPasswordResetEmail, \"x0UksSscQ6g2gwVnc4SNW7gPufE=\", false, function () {\n  return [useSendPasswordResetEmailMutation];\n});\n\n_c = SendPasswordResetEmail;\nexport default SendPasswordResetEmail;\n\nvar _c;\n\n$RefreshReg$(_c, \"SendPasswordResetEmail\");","map":{"version":3,"sources":["C:/Users/shash/OneDrive/Desktop/DeepInsights/frontend/src/pages/auth/SendPasswordResetEmail.js"],"names":["Grid","TextField","Button","Box","Alert","Typography","useState","useSendPasswordResetEmailMutation","SendPasswordResetEmail","server_error","setServerError","server_msg","setServerMsg","sendPasswordResetEmail","isLoading","handleSubmit","e","preventDefault","data","FormData","currentTarget","actualData","email","get","res","error","console","log","errors","document","getElementById","reset","mt","marginTop","color","border","borderRadius","fontSize","paddingLeft","backgroundColor","mb","px","non_field_errors"],"mappings":"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","sourcesContent":["import { Grid, TextField, Button, Box, Alert, Typography } from \"@mui/material\";\r\nimport { useState } from 'react';\r\nimport { useSendPasswordResetEmailMutation } from \"../../services/userAuthApi\";\r\nconst SendPasswordResetEmail = () => {\r\n  const [server_error, setServerError] = useState({})\r\n  const [server_msg, setServerMsg] = useState({})\r\n  const [sendPasswordResetEmail, { isLoading }] = useSendPasswordResetEmailMutation()\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    const data = new FormData(e.currentTarget);\r\n    const actualData = {\r\n      email: data.get('email'),\r\n    }\r\n    const res = await sendPasswordResetEmail(actualData)\r\n    if (res.error) {\r\n      console.log(typeof (res.error.data.errors))\r\n      console.log(res.error.data.errors)\r\n      setServerMsg({})\r\n      setServerError(res.error.data.errors)\r\n    }\r\n    if (res.data) {\r\n      console.log(typeof (res.data))\r\n      console.log(res.data)\r\n      setServerError({})\r\n      setServerMsg(res.data)\r\n      document.getElementById('password-reset-email-form').reset()\r\n    }\r\n  }\r\n  return <>\r\n    {/* <Grid container justifyContent='center'>\r\n      <Grid item sm={6} xs={12}>\r\n        <h1>Reset Password</h1>\r\n        <Box component='form' noValidate sx={{ mt: 1 }} id='password-reset-email-form' onSubmit={handleSubmit}>\r\n          <TextField margin='normal' required fullWidth id='email' name='email' label='Email Address' />\r\n          {server_error.email ? <Typography style={{ fontSize: 12, color: 'red', paddingLeft: 10 }}>{server_error.email[0]}</Typography> : \"\"}\r\n          <Box textAlign='center'>\r\n            <Button type='submit' variant='contained' sx={{ mt: 3, mb: 2, px: 5 }}>Send</Button>\r\n          </Box>\r\n          {server_error.non_field_errors ? <Alert severity='error'>{server_error.non_field_errors[0]}</Alert> : ''}\r\n          {server_msg.msg ? <Alert severity='success'>{server_msg.msg}</Alert> : ''}\r\n        </Box>\r\n      </Grid>\r\n    </Grid> */}\r\n<Box component='form' noValidate sx={{ mt: 1 }} id='password-reset-email-form' onSubmit={handleSubmit}>\r\n<div className=\"container\">\r\n      <nav>\r\n        <h1 className=\"logo\">DeepInsights</h1>\r\n      </nav>\r\n      <div className=\"main-div\" style={{ marginTop: \"10rem\" }}>\r\n        <div className=\"sub-div\">\r\n          <h1 className=\"head\">Forgot your password?</h1>\r\n          <label for=\"forgot\">\r\n            Enter your email and we’ll send you a link to reset your password\r\n          </label>\r\n          {/* <input\r\n            type=\"password\"\r\n            id=\"forgot\"\r\n            placeholder=\"name@company.com\"\r\n          ></input> */}\r\n          <TextField margin='normal'sx={{ color: 'white', border: \"solid white 2px\", borderRadius: 1}} required fullWidth id='email' name='email' label='name@company.com' />\r\n          {server_error.email ? <Typography style={{ fontSize: 12, color: 'red', paddingLeft: 10 }}>{server_error.email[0]}</Typography> : \"\"}\r\n          {/* <a\r\n            href=\"/reset-sent\"\r\n            className=\"links sign-up\"\r\n            style={{ border: \"none\" }}\r\n          >\r\n            Send password reset link\r\n          </a> */}\r\n          <Box textAlign='center'>\r\n         <Button type='submit' variant='contained' style={{ backgroundColor: \"#B44538\"}} sx={{ mt: 3, mb: 2, px: 10 }}>Send password reset link</Button>\r\n         </Box>\r\n          {server_error.non_field_errors ? <Alert severity='error'>{server_error.non_field_errors[0]}</Alert> : ''}\r\n          {/* {server_msg.msg ? <Alert severity='success'>{server_msg.msg}</Alert> : ''} */}\r\n        </div>\r\n      </div>\r\n    </div>\r\n    </Box>\r\n  </>;\r\n};\r\n\r\nexport default SendPasswordResetEmail;\r\n"]},"metadata":{},"sourceType":"module"}